@inherits UmbracoViewPage
@using Umbraco.Web.Models
@*model Slider*@

@{
    //TODO: Convert to model based.


    IEnumerable<IPublishedContent> slider = Umbraco.AssignedContentItem.GetPropertyValue<IEnumerable<IPublishedContent>>("Slider");
}

@if (slider != null && slider.Any())
{
    <div class="col-md-8">
        <div class="flexslider animate-box">
            <ul class="slides">
                @foreach (IPublishedContent slide in slider.Where(x => x.IsVisible()))
                {
                    string title = slide.GetPropertyValue<string>("title");
                    string text = slide.HasValue("text") ? slide.GetPropertyValue<string>("text") : "";
                    string imageUrl = slide.HasValue("image") ? slide.GetPropertyValue<IPublishedContent>("image").Url : "/images/img_bg_1.jpg";   //TODO: Add fallback image
                    var links = slide.GetPropertyValue<RelatedLinks>("link");
                    var link = links != null ? links.FirstOrDefault() : null;

                    <li style="background-image: url('@imageUrl');">
                        <div class="overlay-gradient"></div>
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-md-10 col-md-offset-1 slider-text">
                                    <div class="slider-text-inner">
                                        <h1>@title</h1>
                                        <h2>@text</h2>
                                        @if (link != null)
                                        {
                                            var linkTarget = (link.NewWindow) ? "_blank" : null;
                                            <p class="ct"><a href="@link.Link" target="@linkTarget">@link.Caption <i class="icon-arrow-right"></i></a></p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
}
